;
; File generated by cc65 v 2.18 - Ubuntu 2.18-1
;
	.fopt		compiler,"cc65 v 2.18 - Ubuntu 2.18-1"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_printf
	.import		_kbhit
	.import		_cputsxy
	.import		_screen
	.import		_screen_init
	.import		_ui_draw
	.import		_ui_draw_text
	.import		_open_file
	.import		_read_weapon
	.import		_current_device
	.export		_main

.segment	"RODATA"

L0029:
	.byte	$4F,$4E,$4C,$59,$20,$34,$30,$58,$32,$35,$20,$53,$43,$52,$45,$45
	.byte	$4E,$53,$20,$41,$52,$45,$20,$53,$55,$50,$50,$4F,$52,$54,$45,$44
	.byte	$00
L0042:
	.byte	$45,$52,$52,$4F,$52,$3A,$20,$4F,$50,$45,$4E,$49,$4E,$47,$20,$44
	.byte	$41,$54,$41,$46,$49,$4C,$45,$00
L0047:
	.byte	$50,$52,$45,$53,$53,$20,$41,$4E,$59,$20,$4B,$45,$59,$21,$00
L0026:
	.byte	$53,$43,$52,$45,$45,$4E,$20,$45,$52,$52,$4F,$52,$21,$0D,$00
L0034:
	.byte	$57,$45,$41,$50,$4F,$4E,$53,$00
L0057:
	.byte	$4F,$4B,$00
L0039	:=	L0057+0

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"BSS"

L0017:
	.res	1,$00
L0018:
	.res	41,$00

.segment	"CODE"

	lda     #$FF
	sta     L0018
	lda     #$00
	sta     _screen
	sta     _screen+1
	sta     _screen+14
	sta     _screen+14+1
	jsr     _current_device
	sta     L0017
	jsr     _screen_init
	cmp     #$00
	beq     L0023
	lda     #<(L0026)
	ldx     #>(L0026)
	jsr     pushax
	ldy     #$02
	jsr     _printf
	lda     #<(L0029)
	ldx     #>(L0029)
	jsr     pushax
	ldy     #$02
	jsr     _printf
	ldx     #$00
	lda     #$01
	rts
L0023:	jsr     _ui_draw
	jsr     push0
	lda     #$01
	jsr     _ui_draw_text
	lda     #$02
	jsr     pusha
	lda     #<(L0034)
	ldx     #>(L0034)
	jsr     _open_file
	cmp     #$00
	bne     L0031
	lda     #$01
	jsr     pusha
	jsr     pusha
	lda     #<(L0039)
	ldx     #>(L0039)
	jsr     _cputsxy
	lda     #<(L0018)
	ldx     #>(L0018)
	jsr     pushax
	lda     #$01
	jsr     _read_weapon
	jmp     L003E
L0031:	lda     _screen+16
	jsr     pusha
	lda     _screen+17
	sec
	sbc     #$01
	jsr     pusha
	lda     #<(L0042)
	ldx     #>(L0042)
	jsr     _cputsxy
	lda     _screen+16
	jsr     pusha
	lda     _screen+17
	jsr     pusha
	lda     #<(L0047)
	ldx     #>(L0047)
	jsr     _cputsxy
L0049:	jsr     _kbhit
	cmp     #$00
	beq     L0049
	lda     #$93
	jsr     $ffd2
	ldx     #$00
	lda     #$02
	rts
L003E:	lda     #$01
	jsr     pusha
	lda     _screen+1
	sec
	sbc     #$02
	jsr     pusha
	lda     #<(L0057)
	ldx     #>(L0057)
	jsr     _cputsxy
L0059:	jsr     _kbhit
	cmp     #$00
	beq     L0059
	lda     #$93
	jsr     $ffd2
	ldx     #$00
	txa
	rts

.endproc

