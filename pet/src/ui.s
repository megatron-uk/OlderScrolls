;
; File generated by cc65 v 2.18 - Ubuntu 2.18-1
;
	.fopt		compiler,"cc65 v 2.18 - Ubuntu 2.18-1"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_memcpy
	.import		_memset
	.import		_screen
	.import		_string_len
	.export		_ui_draw
	.export		_ui_draw_text
	.export		_ui_draw_statusbar_text
	.export		_ui_draw_sidebar_text

; ---------------------------------------------------------------
; void __near__ ui_draw (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_ui_draw: near

.segment	"BSS"

L0016:
	.res	1,$00
L0017:
	.res	2,$00

.segment	"CODE"

	lda     #$00
	sta     L0017+1
	lda     _screen
	sta     L0017
	lda     #$55
	sta     $8000
	lda     #$00
	clc
	adc     _screen+4
	sta     ptr1
	lda     #$80
	adc     _screen+4+1
	sta     ptr1+1
	lda     #$49
	ldy     #$00
	sta     (ptr1),y
	tya
	clc
	adc     _screen+6
	sta     ptr1
	lda     #$80
	adc     _screen+6+1
	sta     ptr1+1
	lda     #$4A
	sta     (ptr1),y
	tya
	clc
	adc     _screen+8
	sta     ptr1
	lda     #$80
	adc     _screen+8+1
	sta     ptr1+1
	lda     #$4B
	sta     (ptr1),y
	lda     #$01
	sta     L0016
L00DD:	lda     L0016
	jsr     pusha0
	lda     _screen+1
	jsr     decax1
	jsr     tosicmp
	bcs     L002E
	lda     #$00
	clc
	adc     L0017
	sta     ptr1
	lda     #$80
	adc     L0017+1
	sta     ptr1+1
	lda     #$5D
	ldy     #$00
	sta     (ptr1),y
	tya
	clc
	adc     L0017
	sta     ptr1
	lda     #$80
	adc     L0017+1
	sta     ptr1+1
	ldx     #$00
	lda     _screen
	jsr     decax1
	clc
	adc     ptr1
	sta     ptr1
	txa
	adc     ptr1+1
	sta     ptr1+1
	lda     #$5D
	sta     (ptr1),y
	lda     _screen
	clc
	adc     L0017
	sta     L0017
	tya
	adc     L0017+1
	sta     L0017+1
	inc     L0016
	jmp     L00DD
L002E:	lda     #$00
	clc
	adc     _screen+2
	pha
	lda     #$80
	adc     _screen+2+1
	tax
	pla
	jsr     incax1
	jsr     pushax
	lda     #$40
	jsr     pusha0
	lda     _screen
	jsr     decax2
	jsr     _memset
	lda     #$00
	clc
	adc     _screen+6
	pha
	lda     #$80
	adc     _screen+6+1
	tax
	pla
	jsr     incax1
	jsr     pushax
	lda     #$40
	jsr     pusha0
	lda     _screen
	jsr     decax2
	jsr     _memset
	lda     #$00
	clc
	adc     _screen+10
	sta     ptr1
	lda     #$80
	adc     _screen+10+1
	sta     ptr1+1
	lda     #$6B
	ldy     #$00
	sta     (ptr1),y
	tya
	clc
	adc     _screen+10
	pha
	lda     #$80
	adc     _screen+10+1
	tax
	pla
	clc
	adc     _screen
	bcc     L00DC
	inx
L00DC:	jsr     decax1
	sta     ptr1
	stx     ptr1+1
	lda     #$73
	sta     (ptr1),y
	tya
	clc
	adc     _screen+10
	pha
	lda     #$80
	adc     _screen+10+1
	tax
	pla
	jsr     incax1
	jsr     pushax
	lda     #$40
	jsr     pusha0
	lda     _screen
	jsr     decax2
	jsr     _memset
	lda     #$00
	clc
	adc     _screen+12
	sta     ptr1
	lda     #$80
	adc     _screen+12+1
	sta     ptr1+1
	lda     #$72
	ldy     #$00
	sta     (ptr1),y
	tya
	clc
	adc     _screen+10
	pha
	lda     #$80
	adc     _screen+10+1
	tax
	pla
	clc
	adc     _screen+12
	sta     ptr1
	txa
	adc     _screen+12+1
	sta     ptr1+1
	lda     #$71
	sta     (ptr1),y
	sty     L0017+1
	lda     _screen
	sta     L0017
	sty     L0016
L00DE:	lda     L0016
	jsr     pusha0
	lda     _screen+1
	jsr     decax6
	jsr     decax1
	jsr     tosicmp
	bcs     L0066
	lda     #$00
	clc
	adc     L0017
	pha
	lda     #$80
	adc     L0017+1
	tax
	pla
	clc
	adc     _screen+12
	sta     ptr1
	txa
	adc     _screen+12+1
	sta     ptr1+1
	lda     #$5D
	ldy     #$00
	sta     (ptr1),y
	lda     _screen
	clc
	adc     L0017
	sta     L0017
	tya
	adc     L0017+1
	sta     L0017+1
	inc     L0016
	jmp     L00DE
L0066:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ ui_draw_text (__near__ unsigned char *, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_ui_draw_text: near

.segment	"BSS"

L0076:
	.res	1,$00
L0077:
	.res	1,$00
L0078:
	.res	2,$00
L007A:
	.res	2,$00
L007C:
	.res	1,$00
L007E:
	.res	1,$00

.segment	"CODE"

	jsr     pusha
	ldx     #$00
	txa
	sta     L0078
	sta     L0078+1
	lda     _screen
	jsr     incax1
	sta     L007A
	stx     L007A+1
	lda     _screen
	sec
	sbc     #$08
	sec
	sbc     #$01
	sta     L007C
	lda     _screen+1
	sec
	sbc     #$06
	sta     L007E
	ldy     #$00
	lda     (sp),y
	cmp     #$01
	beq     L00E2
	ldy     #$02
	jsr     ldaxysp
	jsr     _string_len
	sta     L0078
	stx     L0078+1
L00E2:	lda     #$00
	sta     L0077
	lda     #$01
	sta     L0076
L00E3:	lda     L0076
	cmp     L007E
	bcc     L00EB
	jmp     incsp3
L00EB:	ldy     #$00
	lda     (sp),y
	beq     L008F
	tya
	clc
	adc     L007A
	pha
	lda     #$80
	adc     L007A+1
	tax
	pla
	jsr     pushax
	lda     #$60
	jsr     pusha0
	lda     L007C
	jsr     _memset
	jmp     L00EA
L008F:	lda     L0078
	sec
	sbc     L0077
	pha
	lda     L0078+1
	sbc     #$00
	tax
	pla
	cmp     L007C
	txa
	sbc     #$00
	bcs     L0098
	tya
	clc
	adc     L007A
	pha
	lda     #$80
	adc     L007A+1
	tax
	pla
	jsr     pushax
	ldy     #$04
	jsr     ldaxysp
	clc
	adc     L0077
	bcc     L00DF
	inx
L00DF:	jsr     pushax
	lda     L0078
	sec
	sbc     L0077
	pha
	lda     L0078+1
	sbc     #$00
	tax
	pla
	jsr     _memcpy
	jmp     incsp3
L0098:	tya
	clc
	adc     L007A
	pha
	lda     #$80
	adc     L007A+1
	tax
	pla
	jsr     pushax
	ldy     #$04
	jsr     ldaxysp
	clc
	adc     L0077
	bcc     L00E0
	inx
L00E0:	jsr     pushax
	lda     L007C
	ldx     #$00
	jsr     _memcpy
	lda     L007C
	clc
	adc     L0077
	sta     L0077
L00EA:	lda     _screen
	clc
	adc     L007A
	sta     L007A
	lda     #$00
	adc     L007A+1
	sta     L007A+1
	inc     L0076
	jmp     L00E3

.endproc

; ---------------------------------------------------------------
; void __near__ ui_draw_statusbar_text (__near__ unsigned char *, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_ui_draw_statusbar_text: near

.segment	"BSS"

L00A9:
	.res	1,$00
L00AA:
	.res	1,$00
L00AB:
	.res	2,$00
L00AD:
	.res	2,$00
L00AF:
	.res	1,$00
L00B1:
	.res	1,$00

.segment	"CODE"

	jsr     pusha
	lda     #$00
	sta     L00AB
	sta     L00AB+1
	lda     _screen+10
	ldx     _screen+10+1
	jsr     incax1
	sta     L00AD
	stx     L00AD+1
	lda     _screen
	sec
	sbc     #$01
	sta     L00AF
	lda     _screen+1
	sec
	sbc     #$06
	sta     L00B1
	ldy     #$00
	lda     (sp),y
	cmp     #$01
	beq     L00EF
	ldy     #$02
	jsr     ldaxysp
	jsr     _string_len
	sta     L00AB
	stx     L00AB+1
L00EF:	lda     #$00
	sta     L00AA
	lda     #$01
	sta     L00A9
L00F0:	lda     L00A9
	cmp     L00B1
	bcc     L00F8
	jmp     incsp3
L00F8:	ldy     #$00
	lda     (sp),y
	beq     L00C2
	tya
	clc
	adc     L00AD
	pha
	lda     #$80
	adc     L00AD+1
	tax
	pla
	jsr     pushax
	lda     #$60
	jsr     pusha0
	lda     L00AF
	jsr     _memset
	jmp     L00F7
L00C2:	lda     L00AB
	sec
	sbc     L00AA
	pha
	lda     L00AB+1
	sbc     #$00
	tax
	pla
	cmp     L00AF
	txa
	sbc     #$00
	bcs     L00CB
	tya
	clc
	adc     L00AD
	pha
	lda     #$80
	adc     L00AD+1
	tax
	pla
	jsr     pushax
	ldy     #$04
	jsr     ldaxysp
	clc
	adc     L00AA
	bcc     L00EC
	inx
L00EC:	jsr     pushax
	lda     L00AB
	sec
	sbc     L00AA
	pha
	lda     L00AB+1
	sbc     #$00
	tax
	pla
	jsr     _memcpy
	jmp     incsp3
L00CB:	tya
	clc
	adc     L00AD
	pha
	lda     #$80
	adc     L00AD+1
	tax
	pla
	jsr     pushax
	ldy     #$04
	jsr     ldaxysp
	clc
	adc     L00AA
	bcc     L00ED
	inx
L00ED:	jsr     pushax
	lda     L00AF
	ldx     #$00
	jsr     _memcpy
	lda     L00AF
	clc
	adc     L00AA
	sta     L00AA
L00F7:	lda     _screen
	clc
	adc     L00AD
	sta     L00AD
	lda     #$00
	adc     L00AD+1
	sta     L00AD+1
	inc     L00A9
	jmp     L00F0

.endproc

; ---------------------------------------------------------------
; void __near__ ui_draw_sidebar_text (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_ui_draw_sidebar_text: near

.segment	"CODE"

	rts

.endproc

